generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  kindeId    String    @unique 
  name       String?
  email      String   @unique
  createdAt  DateTime  @default(now())
  service    Service[]
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  method      Method    @default(GET)
  userId      String
  User        User      @relation(fields: [userId], references: [kindeId])
  status      Status    @default(OPERATIONAL)
  incidents   Incident[] // Relationship to Incident model
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model Incident {
  id          Int            @id @default(autoincrement())
  serviceId   Int            // Foreign key linking to Service
  service     Service        @relation(fields: [serviceId], references: [id])
  title       String
  description String
  type        String         @default("Incident") // Incident or Maintenance
  status      IncidentStatus @default(ONGOING)    // Enum for status
  updates     Update[]       // Relationship to Update model
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Update {
  id          Int       @id @default(autoincrement())
  incidentId  Int       // Foreign key linking to Incident
  incident    Incident  @relation(fields: [incidentId], references: [id])
  message     String    // Update message (e.g., "Root cause identified")
  createdAt   DateTime  @default(now())
}


enum Status {
  OPERATIONAL
  DEGRADED_PERFORMANCE
  PARTIAL_OUTAGE
  MAJOR_OUTAGE
}

enum Method {
  GET 
  POST
}

enum IncidentStatus {
  ONGOING
  RESOLVED
  SCHEDULED
}